[
  "Amazing stuff, as usual. You're literally the best Flutter Tutor out there. Keep up the good work!",
  "I applied for a development job and went through 3 interviews. After the 3rd interview, I was given a take-home assignment that requires us to know clean architecture. I know nothing about clean architecture but have experience developing apps. The company gave me some slides to learn clean architecture but I don't think they explain it that well. I am reading your written tutorials and then watching the videos and taking notes. You are saving me! Thank you!",
  "What an amazing series. I'm so thankful for all of the efforts you put into this series. Keep it up",
  "This is an amazing course you've put together, really appreciate all the hard work you put into it. In the future would love to hear more about how to handle more complex cases with full CRUD operations, as well as multiple views/blocs/repositories which are interdependent. Looking forward to the next class!",
  "I love this course.",
  "Sometimes it is so hard to catchup.",
  "I do not understand anything",
  "Perfect explanations, perfect speed.  Fantastic job.  Best Flutter Tutorial I've seen on YouTube! Hats Off to you Sir!",
  "Thanks for this great video! Coding is easy, but designing a good architecture is quite a challenge.",
  "I think we could name repositories in domain layer: abstract_repo and the one in the data layer to be: repo_implements. It could be easy to understand the differences as such. My beginner opinion.",
  "Interested for the next part to see how the design holds up in a larger more complex app. I’ve seen really similar designs in a web service, but I’m worried that doing things like showing data from a cached source before responding with the updated data from an api will be difficult because the repo is separated from the bloc and the domain has to pass the update through.",
  "A more complex app would have many features that potentially share the same entities and data.  Should those directory structures be up a level, outside the feature tree?",
  "Nice one. A lot of tutorials are focused on explaing one thing, a couple of them are showing archtectirure patterns, almost none of them are explaing testing. You are planning to create it all together and whats more with TDD. Awsome job and desire to share knowledge. Thanks for that and I hope, We’ll see a lot of videos from you",
  "OH MY GOD! You make me to understand a lot design, framework , code I have coding 2 year . You're video open my mind forever. Thanks, sir.",
  "VERY good explanation. Thanks a lot for sharing this with us!",
  "Hey Reso ! Amazing content I think you should make a video explaining the sequence of videos a person should watch  that you have uploaded  to be a good flutter developer",
  "Are those features meant to be independent of each other? And if yes, there would be code duplication. What is the best approach in your opinion?",
  "After watching ton of videos...I finally found yours who took time to go into the depth of things. Thank you",
  "Nice one. A lot of tutorials are focused on explaing one thing, a couple of them are showing archtectirure patterns, almost none of them are explaing testing. You are planning to create it all together and whats more with TDD. Awsome job and desire to share knowledge. Thanks for that and I hope, We’ll see a lot of videos from you",
  "Great. There's an \"flutter modular\" that is very similar, if not the same approach. The difference is that they call it modules and not features. Also, has it has a package the are some routing and DI included along side with the pattern. I will watch the playlist, this kind of stuff is really good when the app start to grow. Thanks",
  "I'm in the middle of my first flutter project, And I wish I had found you earlier. I'm a fan of Uncle Bob and clean architecture.",
  "Best video I've ever seen about flutter architecture! Thank you very much for the content!",
  "This is what I need. Love it, big thanks, excellent work dude!",
  "What an amazing series. I would to know what's the theme are you using in vsCode ?",
  "Would a mapper substitute the inheritance of models from the entities? (I believe it creates betters separation of concerns)",
  "Hi. I have question that, we shoud create new feature for each screen or not? because we have pages, widgets for each feature. How do we divide project to features easily?"
]
